checklist:
  - プロダクトビジョンが明確に定義されておらず、ROIや価値提供の指標が具体化されていない。
  - チームが「なぜこの機能を作るのか」を理解できておらず、プロダクトゴールとの紐付けが不明確である。
  - デイリースクラムが形骸化しており、impedimentsの共有や解決が適切に行われていない。
  - レトロスペクティブで特定された問題（例：テスト自動化の不足、チーム間連携の課題）に対する改善アクションが実行されていない。
  - プロダクトバックログの優先順位付けが不明確で、ビジネス価値やリスクの評価基準が標準化されていない。
  - ユーザーストーリーが肥大化しており（2-3日以上の工数）、INVESTの原則に反している。（例：1スプリントで完了できないPBI）
  - アクセプタンス基準があいまいで、Definition of Doneが具体的な検証項目まで落とし込めていない。
  - CI/CDパイプラインが不安定で、自動テストのカバレッジが不十分である。
  - 開発環境と本番環境の差異が大きく、環境依存の不具合が頻発している。
  - パフォーマンス要件やセキュリティ要件が明確でなく、非機能要件のテスト基準が未確立である。
  - 運用自動化が不十分で、デプロイやロールバックに手動作業が多く含まれている。
  - インシデント対応やエスカレーションフローが標準化されておらず、障害時の対応が属人化している。
  - モニタリングとアラート基準が適切に設定されておらず、問題の早期発見が困難である。（例：APM・ログ監視の未導入）
  - プロダクトオーナーの権限が不明確で、意思決定プロセスに遅延が発生している。
  - ステークホルダーとの定期的なデモやレビューが実施されず、フィードバックループが機能していない。
  - 業務知識やドメイン用語の共有が不足しており、要件解釈に齟齬が発生している。
  - 特定の技術スキル（例：セキュリティ、パフォーマンスチューニング）を持つメンバーが不足している。
  - チーム間の知識移転が円滑でなく、ナレッジマネジメントが確立されていない。
  - メンバーの入れ替わりに対するオンボーディングプロセスが確立されていない。
  - スコープ変更や優先度変更の管理プロセスが不明確で、計画の一貫性が保てていない。
  - 技術的負債の可視化と返済計画が不十分で、保守性の低下が進行している。
  - データ移行やシステム統合などの大規模変更に対するリスク管理が不十分である。
  - 経営層のアジャイル開発への理解が不足しており、従来型のマイルストーン管理が求められている。
  - プロジェクトの成功指標が不明確で、ビジネス価値の評価方法が確立されていない。
  - アジャイルガバナンスの体制が整備されておらず、組織横断的な調整が困難である。 