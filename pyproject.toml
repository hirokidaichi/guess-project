[project]
name = "guess-project"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "matplotlib>=3.9.3",
    "numpy>=1.26.4",
    "pandas>=2.2.3",
    "pyyaml>=6.0.2",
    "scipy>=1.14.1",
    "streamlit>=1.40.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.3.0",
    "pyright>=1.1.350",
]

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
]
fixable = ["ALL"]
unfixable = []

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "--cov=hello",
    "--cov-report=term-missing",
    "--no-cov-on-fail",
]

[tool.pyright]
include = ["src", "tests"]
exclude = [
    "**/__pycache__",
    ".venv",
]
pythonVersion = "3.12"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = false

[dependency-groups]
dev = [
    "pyright>=1.1.392.post0",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
]

[tool.coverage.run]
source = ["hello"]
omit = ["*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
]
